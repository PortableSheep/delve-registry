name: Deploy Registry

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate registry files
        run: |
          echo "üîç Validating registry files..."

          # Check if required files exist
          if [ ! -f "registry.yml" ]; then
            echo "‚ùå registry.yml not found"
            exit 1
          fi

          if [ ! -f "api/plugins.json" ]; then
            echo "‚ùå api/plugins.json not found"
            exit 1
          fi

          # Install jq if not available
          if ! command -v jq &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

          # Validate JSON files
          echo "Validating api/plugins.json..."
          if ! jq empty api/plugins.json; then
            echo "‚ùå Invalid JSON in api/plugins.json"
            exit 1
          fi

          # Validate plugin.json files if they exist
          if find . -name "plugin.json" -type f | head -1 | grep -q .; then
            echo "Validating plugin.json files..."
            find . -name "plugin.json" -type f -exec jq empty {} \;
          fi

          echo "‚úÖ All files validated"

      - name: Create index page
        run: |
          echo "üìÑ Creating index page..."
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Delve Plugin Registry</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                max-width: 1000px;
                margin: 0 auto;
                padding: 2rem;
                line-height: 1.6;
                color: #333;
                background: #fafafa;
              }
              .header {
                text-align: center;
                background: white;
                padding: 3rem;
                border-radius: 12px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                margin-bottom: 2rem;
              }
              .header h1 {
                margin: 0;
                font-size: 2.5rem;
                color: #2c3e50;
              }
              .header p {
                margin: 1rem 0 0 0;
                color: #7f8c8d;
                font-size: 1.1rem;
              }
              .stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 1.5rem;
                margin: 2rem 0;
              }
              .stat-card {
                background: white;
                padding: 2rem;
                border-radius: 12px;
                text-align: center;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                transition: transform 0.2s;
              }
              .stat-card:hover {
                transform: translateY(-2px);
              }
              .stat-number {
                font-size: 2.5rem;
                font-weight: bold;
                color: #3498db;
                margin-bottom: 0.5rem;
              }
              .stat-label {
                color: #7f8c8d;
                font-weight: 500;
              }
              .section {
                background: white;
                padding: 2rem;
                border-radius: 12px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                margin: 2rem 0;
              }
              .section h2 {
                margin-top: 0;
                color: #2c3e50;
                border-bottom: 2px solid #ecf0f1;
                padding-bottom: 1rem;
              }
              .endpoints {
                display: grid;
                gap: 1rem;
              }
              .endpoint {
                padding: 1rem;
                background: #f8f9fa;
                border-radius: 8px;
                border-left: 4px solid #3498db;
                font-family: 'Monaco', 'Menlo', monospace;
              }
              .endpoint-method {
                font-weight: bold;
                color: #27ae60;
              }
              .endpoint-url {
                color: #2980b9;
                text-decoration: none;
              }
              .endpoint-url:hover {
                text-decoration: underline;
              }
              .endpoint-desc {
                color: #7f8c8d;
                font-size: 0.9rem;
                margin-top: 0.5rem;
              }
              .quick-start {
                background: #2c3e50;
                color: white;
                padding: 1.5rem;
                border-radius: 8px;
                overflow-x: auto;
              }
              .quick-start code {
                color: #ecf0f1;
                font-family: 'Monaco', 'Menlo', monospace;
              }
              .footer {
                text-align: center;
                margin-top: 3rem;
                padding: 2rem;
                color: #7f8c8d;
                border-top: 1px solid #ecf0f1;
              }
              .badge {
                display: inline-block;
                background: #27ae60;
                color: white;
                padding: 0.25rem 0.75rem;
                border-radius: 20px;
                font-size: 0.8rem;
                margin-left: 0.5rem;
              }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>üîå Delve Plugin Registry</h1>
              <p>Central repository for Delve plugins and extensions</p>
              <span class="badge">LIVE</span>
            </div>

            <div class="stats">
              <div class="stat-card">
                <div class="stat-number" id="plugin-count">-</div>
                <div class="stat-label">Available Plugins</div>
              </div>
              <div class="stat-card">
                <div class="stat-number" id="category-count">-</div>
                <div class="stat-label">Categories</div>
              </div>
              <div class="stat-card">
                <div class="stat-number">99.9%</div>
                <div class="stat-label">Uptime</div>
              </div>
            </div>

            <div class="section">
              <h2>üì° API Endpoints</h2>
              <div class="endpoints">
                <div class="endpoint">
                  <span class="endpoint-method">GET</span>
                  <a href="./registry.yml" class="endpoint-url">./registry.yml</a>
                  <div class="endpoint-desc">Registry metadata and configuration</div>
                </div>
                <div class="endpoint">
                  <span class="endpoint-method">GET</span>
                  <a href="./api/plugins.json" class="endpoint-url">./api/plugins.json</a>
                  <div class="endpoint-desc">Complete plugin catalog with search data</div>
                </div>
                <div class="endpoint">
                  <span class="endpoint-method">GET</span>
                  <span class="endpoint-url">./api/plugins/{plugin-id}</span>
                  <div class="endpoint-desc">Detailed information for specific plugin</div>
                </div>
                <div class="endpoint">
                  <span class="endpoint-method">GET</span>
                  <span class="endpoint-url">./{plugin-id}/plugin.json</span>
                  <div class="endpoint-desc">Plugin metadata and configuration schema</div>
                </div>
                <div class="endpoint">
                  <span class="endpoint-method">GET</span>
                  <span class="endpoint-url">./{plugin-id}/releases/{version}/{asset}</span>
                  <div class="endpoint-desc">Download plugin binaries and assets</div>
                </div>
              </div>
            </div>

            <div class="section">
              <h2>üöÄ Quick Start</h2>
              <p>Add this registry to your Delve configuration:</p>
              <div class="quick-start">
                <code># host-config.yml
registries:
  - name: official
    url: https://portablesheep.github.io/delve-registry
    enabled: true
    priority: 1</code>
              </div>
            </div>

            <div class="section">
              <h2>üìö Resources</h2>
              <ul>
                <li><a href="./README.md">üìñ Documentation</a></li>
                <li><a href="./HOSTING.md">üåê Hosting Guide</a></li>
                <li><a href="./SETUP.md">‚öôÔ∏è Setup Instructions</a></li>
                <li><a href="https://github.com/PortableSheep/delve-registry">üíª Source Code</a></li>
              </ul>
            </div>

            <div class="footer">
              <p>üîÑ Last updated: <span id="last-updated">Loading...</span></p>
              <p>Powered by <a href="https://pages.github.com">GitHub Pages</a> ‚Ä¢ Built with ‚ù§Ô∏è for the Delve community</p>
            </div>

            <script>
              // Update last modified time
              document.getElementById('last-updated').textContent = new Date().toLocaleString();

              // Load and display registry stats
              fetch('./api/plugins.json')
                .then(response => response.json())
                .then(data => {
                  document.getElementById('plugin-count').textContent = data.total_plugins || 0;
                  document.getElementById('category-count').textContent = (data.categories && data.categories.length) || 0;
                })
                .catch(err => {
                  console.warn('Could not load registry stats:', err);
                  document.getElementById('plugin-count').textContent = '0';
                  document.getElementById('category-count').textContent = '0';
                });
            </script>
          </body>
          </html>
          EOF
          echo "‚úÖ Index page created"

      - name: Create sitemap
        run: |
          echo "üó∫Ô∏è Creating sitemap..."
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

          cat > sitemap.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>${BASE_URL}/</loc>
              <lastmod>${TIMESTAMP}</lastmod>
              <changefreq>daily</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>${BASE_URL}/registry.yml</loc>
              <lastmod>${TIMESTAMP}</lastmod>
              <changefreq>daily</changefreq>
              <priority>0.9</priority>
            </url>
            <url>
              <loc>${BASE_URL}/api/plugins.json</loc>
              <lastmod>${TIMESTAMP}</lastmod>
              <changefreq>hourly</changefreq>
              <priority>0.9</priority>
            </url>
          </urlset>
          EOF
          echo "‚úÖ Sitemap created"

      - name: Add optimization files
        run: |
          echo "‚ö° Adding optimization files..."

          # Prevent Jekyll processing
          touch .nojekyll

          # Add robots.txt
          cat > robots.txt << EOF
          User-agent: *
          Allow: /

          Sitemap: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/sitemap.xml
          EOF

          echo "‚úÖ Optimization files added"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        run: |
          echo "üéâ Registry deployed successfully!"
          echo "üìç URL: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "üì° Available endpoints:"
          echo "  ‚Ä¢ Registry metadata: ${{ steps.deployment.outputs.page_url }}registry.yml"
          echo "  ‚Ä¢ Plugin catalog: ${{ steps.deployment.outputs.page_url }}api/plugins.json"
          echo ""
          echo "üöÄ Add to Delve with:"
          echo "registries:"
          echo "  - name: official"
          echo "    url: ${{ steps.deployment.outputs.page_url }}"
          echo "    enabled: true"
